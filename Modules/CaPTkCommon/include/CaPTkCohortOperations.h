/**
contact: software@cbica.upenn.edu
Copyright (c) 2018 University of Pennsylvania. All rights reserved.
Use of this source code is governed by license located in license file:
https://github.com/CBICA/InciSe/blob/main/LICENSE
**/
/** \file CaPTkCohortOperations.h
 * \brief Defines functions that operate on cohorts
 * 
 * Operations either via the captk::Cohort class and similar 
 * or via the file system with either json files or directory structures
 */

#ifndef CaPTkCohortOperations_h
#define CaPTkCohortOperations_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkCaPTkCommonExports.h>

namespace captk
{
class Cohort;
class CohortSubject;
class CohortStudy;
class CohortSeries;
class CohortImage;
}

#include <QObject>
#include <QString>
#include <QStringList>
#include <QList>
#include <QSharedPointer>
#include <QJsonDocument>

#include <string>
#include <vector>

namespace captk
{

/** \brief Merge multiple cohorts into one
 *
 * Each subject that appears on multiple will have it's images concatenated
 * \param cohorts list of all the cohorts to be merged
 * \return a unified cohort
 */
MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::Cohort> 
CohortMerge(QList<QSharedPointer<captk::Cohort>> cohorts);

/** \brief Get a QJsonDocument containing the 
 * information of a cohort from a directory structure that
 * follows the convention: 
 * COHORT_ROOT/SUBJ_NAME/STUDY_NAME/MODALITY_NAME/SERIES_DESC_NAME/image.nii.gz 
 */
MITKCAPTKCOMMON_EXPORT QSharedPointer<QJsonDocument> 
CohortJsonFromDirectoryStructure(QString& directory);

/** \brief Load from json -> captk::Cohort */
MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::Cohort> 
CohortJsonLoad(QSharedPointer<QJsonDocument> json);

/** \brief Create a QJsonDocument from a captk::Cohort instance */
MITKCAPTKCOMMON_EXPORT QSharedPointer<QJsonDocument>
CohortToJson(QSharedPointer<captk::Cohort> cohort);

/** \namespace internal 
 * \brief Contains helper functions for cohort processing
 */
namespace internal
{
	// ---- Helpers for cohort merging ----

	MITKCAPTKCOMMON_EXPORT bool
	CohortIsImagePathInImageList(
		QString imagePath,
		QList<QSharedPointer<captk::CohortImage>> list
	);

	MITKCAPTKCOMMON_EXPORT QList<QSharedPointer<captk::CohortImage>>
	CohortMergeImageLists(
		QList<QSharedPointer<captk::CohortImage>> list1,
		QList<QSharedPointer<captk::CohortImage>> list2
	);

	MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::CohortSeries>
	CohortMergeSeries(
		QSharedPointer<captk::CohortSeries> series1,
		QSharedPointer<captk::CohortSeries> series2
	);

	MITKCAPTKCOMMON_EXPORT bool
	CohortIsSeriesInSeriesList(
		QString modality,
		QString seriesDescription,
		QList<QSharedPointer<captk::CohortSeries>> list
	);

	MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::CohortStudy>
	CohortMergeStudies(
		QSharedPointer<captk::CohortStudy> study1,
		QSharedPointer<captk::CohortStudy> study2
	);

	MITKCAPTKCOMMON_EXPORT bool
	CohortIsStudyInStudyList(
		QString name,
		QList<QSharedPointer<captk::CohortStudy>> list
	);

	MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::CohortSubject>
	CohortMergeSubjects(
		QSharedPointer<captk::CohortSubject> subject1,
		QSharedPointer<captk::CohortSubject> subject2
	);

	MITKCAPTKCOMMON_EXPORT bool
	CohortIsSubjectInSubjectList(
		QString name,
		QList<QSharedPointer<captk::CohortSubject>> list
	);

	MITKCAPTKCOMMON_EXPORT QSharedPointer<captk::Cohort>
	CohortMergeCohorts(
		QSharedPointer<captk::Cohort> cohort1,
		QSharedPointer<captk::Cohort> cohort2
	);

	// ---- Basic operations ----

	MITKCAPTKCOMMON_EXPORT QStringList GetSubdirectories(QString& directory);
	MITKCAPTKCOMMON_EXPORT QStringList GetFilesInDir(QString& directory);
	MITKCAPTKCOMMON_EXPORT QString     GetFileNameFromPath(QString& path);
	MITKCAPTKCOMMON_EXPORT bool        IsDir(QString& path);
}

}

#endif // ! #ifndef CaPTkCohortOperations_h